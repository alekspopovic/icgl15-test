{"version":3,"sources":["webpack:///./src/styles/button.module.css","webpack:///./src/styles/blogPost.module.css","webpack:///./src/components/button.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","Button","render","this","props","isExternal","url","text","isCentered","className","buttonStyles","button","centered","href","to","React","Component","BlogPostTemplate","postNavigation","post","data","markdownRemark","pageContext","previous","next","blogPostStyles","fields","slug","frontmatter","title","subHeaderText","date","headerText","background","language","location","isBlogPostPage","description","excerpt","pagePath","pathname","blogPost","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,OAAS,+BAA+B,SAAW,mC,uBCArED,EAAOC,QAAU,CAAC,SAAW,mCAAmC,eAAiB,yCAAyC,eAAiB,2C,gGCGrIC,E,gLACJC,OAAA,WAAU,IAAD,EACuCC,KAAKC,MAA3CC,EADD,EACCA,WAAYC,EADb,EACaA,IAAKC,EADlB,EACkBA,KAAMC,EADxB,EACwBA,WAE/B,OAAIH,EAEA,uBACEI,UAAcC,IAAaC,OAAlB,KACPH,EAAaE,IAAaE,SAAW,IAEvCC,KAAMP,GAELC,GAML,kBAAC,OAAD,CACEE,UAAcC,IAAaC,OAAlB,KACPH,EAAaE,IAAaE,SAAW,IAEvCE,GAAIR,GAEHC,I,GAxBYQ,IAAMC,WA8BZf,O,yKCzBTgB,E,gLACJf,OAAA,WACE,IAGIgB,EAHEC,EAAOhB,KAAKC,MAAMgB,KAAKC,eADtB,EAEoBlB,KAAKC,MAAMkB,YAA9BC,EAFD,EAECA,SAAUC,EAFX,EAEWA,MAIdD,GAAYC,KACdN,EACE,yBAAKT,UAAWgB,IAAeP,gBAC5BK,GACC,kBAAC,IAAD,CACElB,YAAY,EACZC,IAAKiB,EAASG,OAAOC,KACrBpB,KAAI,KAAOgB,EAASK,YAAYC,QAGnCL,GACC,kBAAC,IAAD,CACEnB,YAAY,EACZC,IAAKkB,EAAKE,OAAOC,KACjBpB,KAASiB,EAAKI,YAAYC,MAAtB,SAOd,IAAIC,EAAmBX,EAAKS,YAAYG,KAAvB,mBAEjB,OACE,kBAAC,IAAD,CACEC,WAAYb,EAAKS,YAAYC,MAC7BC,cAAeA,EACfG,YAAY,EACZC,SAAS,KACTC,SAAUhC,KAAKC,MAAM+B,SACrBC,gBAAgB,GAEhB,kBAAC,IAAD,CACEP,MAAOV,EAAKS,YAAYC,MACxBQ,YAAalB,EAAKS,YAAYS,aAAelB,EAAKmB,QAClDC,SAAUpC,KAAKC,MAAM+B,SAASK,WAEhC,6BAAS/B,UAAWgB,IAAegB,UACjC,4BAAKtB,EAAKS,YAAYC,OACtB,6BAASa,wBAAyB,CAAEC,OAAQxB,EAAKyB,SAElD1B,I,GAhDsBH,IAAMC,WAsDtBC,YAER,IAAM4B,EAAS","file":"component---src-templates-blog-post-js-89903a56a7ce52c34b51.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button-module--button--14Cf8\",\"centered\":\"button-module--centered--2MQJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogPost\":\"blogPost-module--blogPost--2rT0T\",\"postNavigation\":\"blogPost-module--postNavigation--2NzXT\",\"paginationUrls\":\"blogPost-module--paginationUrls--1hR1H\"};","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport buttonStyles from \"../styles/button.module.css\"\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { isExternal, url, text, isCentered } = this.props\r\n\r\n    if (isExternal) {\r\n      return (\r\n        <a\r\n          className={`${buttonStyles.button} ${\r\n            isCentered ? buttonStyles.centered : \"\"\r\n          }`}\r\n          href={url}\r\n        >\r\n          {text}\r\n        </a>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <Link\r\n        className={`${buttonStyles.button} ${\r\n          isCentered ? buttonStyles.centered : \"\"\r\n        }`}\r\n        to={url}\r\n      >\r\n        {text}\r\n      </Link>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Button from \"../components/button\"\r\n// import kebabCase from \"lodash.kebabcase\"\r\n\r\nimport blogPostStyles from \"../styles/blogPost.module.css\"\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    let postNavigation\r\n\r\n    if (previous || next) {\r\n      postNavigation = (\r\n        <div className={blogPostStyles.postNavigation}>\r\n          {previous && (\r\n            <Button\r\n              isExternal={false}\r\n              url={previous.fields.slug}\r\n              text={`← ${previous.frontmatter.title}`}\r\n            />\r\n          )}\r\n          {next && (\r\n            <Button\r\n              isExternal={false}\r\n              url={next.fields.slug}\r\n              text={`${next.frontmatter.title} →`}\r\n            />\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    let subHeaderText = `${post.frontmatter.date} | Aleks Popovic`\r\n\r\n    return (\r\n      <Layout\r\n        headerText={post.frontmatter.title}\r\n        subHeaderText={subHeaderText}\r\n        background={true}\r\n        language=\"en\"\r\n        location={this.props.location}\r\n        isBlogPostPage={true}\r\n      >\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n          pagePath={this.props.location.pathname}\r\n        />\r\n        <article className={blogPostStyles.blogPost}>\r\n          <h2>{post.frontmatter.title}</h2>\r\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        </article>\r\n        {postNavigation}\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}